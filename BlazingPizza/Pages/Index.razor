@page "/"
@using System.Net.Http.Json

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject OrderState OrderState

<div class="main">
    <h1>Blazing Pizzas</h1>

    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li @onclick="@(() => OrderState.ShowingPizzaDialog(special))" style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>

    @if (OrderState.IsShowingPizzaDialog)
    {
            <ConfigurePizzaDialog  
                Pizza="@OrderState.Pizza"
                OnCancel="@OrderState.CancelPizzaDialog"
                OnConfirm="@OrderState.ConfirmPizzaDialog" />
    }

</div>

<div class="sidebar">
    @if (OrderState.Order.Pizzas.Any())
    {
        <div class="order-contents">
            <h2>Your order</h2>
            @foreach (var pizza in OrderState.Order.Pizzas)
            {
                <div class="cart-item">
                    <div class="title">
                        "@(pizza.Size)" @pizza.Special.Name
                    </div>
                    <a @onclick="@( () => OrderState.RemovePizza(pizza))" class="delete-item">x</a>
                </div>
                <div class="item-price">
                    @pizza.GetFormattedTotalPrice()
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Choose a pizza<br> to get started</div>
    }

    <div class="order-total @(OrderState.Order.Pizzas.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@OrderState.Order.GetFormattedTotalPrice()</span>
        @* <a href="checkout-val" class="@(OrderState.Order.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")"> *@
        <a href="checkout" class="@(OrderState.Order.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order >
        </a>
    </div>
</div>
@code {
    List<PizzaSpecial> specials = new();
    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
    }
}